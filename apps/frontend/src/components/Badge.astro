---
import { cva, type VariantProps } from 'class-variance-authority';
import { twMerge } from 'tailwind-merge';

const variants = cva(
  'flex flex-row rounded-full items-center gap-2 dark:bg-opacity-10 bg-opacity-10',
  {
    variants: {
      color: {
        normal:
          'dark:text-white-dark-invert text-white dark:bg-white-dark-invert bg-white',
        red: 'dark:text-red-invert text-red dark:bg-red-invert bg-red',
        orange:
          'dark:text-orange-invert text-orange dark:bg-orange-invert bg-orange',
        yellow:
          'dark:text-yellow-invert text-yellow dark:bg-yellow-invert bg-yellow',
        green:
          'dark:text-green-invert text-green dark:bg-green-invert bg-green',
        blue: 'dark:text-blue-invert text-blue dark:bg-blue-invert bg-blue',
        purple:
          'dark:text-purple-invert text-purple dark:bg-purple-invert bg-purple',
        pink: 'dark:text-pink-invert text-pink dark:bg-pink-invert bg-pink',
      },
      size: {
        base: 'text-xs px-3 py-2',
        lg: 'text-sm px-4 py-3 [&>span>svg]:text-lg',
      },
    },
    defaultVariants: {
      color: 'normal',
      size: 'base',
    },
  },
);

type Variant = VariantProps<typeof variants>;

export interface Props extends Variant {
  class?: string;
}

const { color, size, class: className } = Astro.props;
---

<div class={twMerge(variants({ color, size }), className)}>
  <slot name="left" />
  <span class="font-bold"><slot name="text" /></span>
  <slot name="right" />
</div>

---
import { cva, type VariantProps } from 'class-variance-authority';
import { twMerge } from 'tailwind-merge';

const variants = cva(
  'flex flex-row rounded-full items-center gap-2 bg-opacity-10',
  {
    variants: {
      color: {
        normal: 'text-white bg-white',
        red: 'text-red bg-red',
        orange: 'text-orange bg-orange',
        yellow: 'text-yellow bg-yellow',
        green: 'text-green bg-green',
        blue: 'text-blue bg-blue',
        purple: 'text-purple bg-purple',
        pink: 'text-pink bg-pink',
      },
      size: {
        base: 'text-xs px-3 py-2',
        lg: 'text-sm px-4 py-3 [&>span>svg]:text-lg',
      },
    },
    defaultVariants: {
      color: 'normal',
      size: 'base',
    },
  },
);

type Variant = VariantProps<typeof variants>;

export interface Props extends Variant {
  content: string;
  icon: astroHTML.JSX.Element;
  class?: string;
}

const { content, icon, color, size, class: className } = Astro.props;
const Icon = icon;
---

<div class={twMerge(variants({ color, size }), className)}>
  <span><Icon /></span>
  <span class="font-bold">{content}</span>
</div>

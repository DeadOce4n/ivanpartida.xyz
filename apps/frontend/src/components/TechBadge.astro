---
import { cva, type VariantProps } from 'class-variance-authority';
import { twMerge } from 'tailwind-merge';

const variants = cva(
  'flex flex-row items-center gap-2 bg-opacity-10 px-3 py-2',
  {
    variants: {
      color: {
        normal: 'text-white bg-white',
        red: 'text-red bg-red',
        orange: 'text-orange bg-orange',
        yellow: 'text-yellow bg-yellow',
        green: 'text-green bg-green',
        blue: 'text-blue bg-blue',
        purple: 'text-purple bg-purple',
        pink: 'text-pink bg-pink',
      },
    },
    defaultVariants: {
      color: 'normal',
    },
  },
);

type Variant = VariantProps<typeof variants>;

export interface Props extends Variant {
  content: string;
  icon: astroHTML.JSX.Element;
}

const { content, icon, color } = Astro.props;
const Icon = icon;
---

<div class={twMerge(variants({ color }))}>
  <span><Icon /></span>
  <span class="text-xs font-bold">{content}</span>
</div>
